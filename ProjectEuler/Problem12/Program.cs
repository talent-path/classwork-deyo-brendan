using System;
using System.Collections.Generic;
using Utils;

namespace Problem12
{
    class Program
    {

        //The sequence of triangle numbers is generated by adding the natural numbers.
        //So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

        //1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

        //Let us list the factors of the first seven triangle numbers:

        // 1: 1
        // 3: 1,3
        // 6: 1,2,3,6
        //10: 1,2,5,10
        //15: 1,3,5,15
        //21: 1,3,7,21
        //28: 1,2,4,7,14,28
        //We can see that 28 is the first triangle number to have over five divisors.

        //What is the value of the first triangle number to have over five hundred divisors?

        static void Main(string[] args)
        {
            int toReturn = 1;

            bool found = false;

            int divide = 500;

            int iterate = 0;

            int numOfDivisors = 0;

            int increase = 1;

            //for(int increase = 1; increase <= 10; increase++ )
            //{
            //    iterate += increase;
            //    Console.WriteLine(iterate);
            //}

            bool solved = false;

            while(!solved)
            {
                iterate += increase;

                List<int> divisors = Util.GenerateDivisors(iterate);

                if (divisors.Count > 500)
                {
                    solved = true;
                    toReturn = iterate;
                }

                increase++;
            }

            Console.WriteLine("Num: " + toReturn);

        }
    }
}
